@page "/Account/RegisterConfirmation"
@using Microsoft.AspNetCore.Identity
@using HagaDropsIt.Client.Data
@using HagaDropsIt.Shared.Entities

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<style>
    .register-confirmation {
        margin-left: 1rem;
        margin-top: 5rem;
        justify-content: center;
        align-items: start;
        color: white;
        opacity: 0.8;
        text-align: center;
    }

    .register-confirmation p{
        font-size: 1rem;
        margin-top: 1rem;
        text-align: center;
    }
</style>

<PageTitle>Register confirmation</PageTitle>

<div class="register-confirmation">
    <h1 id="RegisterConfirmation">Register confirmation</h1>

    <StatusMessage Message="@statusMessage" />

    @if (emailConfirmationLink is not null)
    {
        <p>
            This app does not currently have a real email sender registered, see <a href="https://aka.ms/aspaccountconf">these docs</a> for how to configure a real email sender.
            Normally this would be emailed: <a href="@emailConfirmationLink">Click here to confirm your account</a>
        </p>
    }
    else
    {
        <p id="ConfirmYourAccount" class:"register-confirmation">Please check your email to confirm your account.</p>
    }
 </div>

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
   
    }
}

